インターフェース、抽象クラス、具象クラスのどれで表現すべきか

(a) N分木のノードを表すTreeNode
	「インターフェース」
	・N分木は追加、削除、探索の基本的な操作を提供するためにインターフェースを使うのがよい
	・N分木はNによってノードの構造が異なるため、フィールドの定義は各拡張クラスが行うのがよいため抽象クラスは適切ではない
	・N分木のNによって探索方法が変わることから具象クラスは適切ではない
(b) 特定の順番(深さ優先、幅優先など)で木を探索するTreeWalker
	「抽象クラス」
	・木の構造は同じで探索の順番のみサブクラスに依存する場合、他の構造は統一するのがよいため抽象クラスがよい
	・インターフェースで探索方法の実装を義務付けられるが、ノードの用意までは義務付けられない
	・探索方法はサブクラスによって変わるので具象クラスにはなりにくい
(c) グラフィックシステムにより描画可能なオブジェクトのためのDrawable
	「インターフェース」
	・オブジェクト(線、円、矩形)によって描画方法は異なるため、描画可能であるということを伝えるマークインターフェースがよい
	・抽象クラスを使うほど抽象化できない
	・具象クラスをかけるほど具体性がない
(d) グラフィックデスクトップから実行できるプログラムのためのApplocation
	「具象クラス」
	・ 具体性がないとApplicationとして起動しないため
